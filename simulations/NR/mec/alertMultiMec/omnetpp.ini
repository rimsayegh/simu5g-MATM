[General]
image-path=../../../images
output-scalar-file-append = false
#debug-on-errors = true
record-eventlog = false 
#**.log.level=EV
#**.mecOrchestrator.debug= true
#**.mecService.verbose = true
#**.routingRecorder.enabled = false
#*.visualizer.displayRoutingTables = true
#*.router*.multicastForward = true
#*.mecPlatform.verbosity = DEBUG
#*.mecOrchestrator.verbosity = DEBUG
#**.verbosity = EV 

#*.mecOrchestrator.silent = false
#*.locationService.silent = false

# COMMENT
# Enable debug or verbose messages in specific components
#*.mecOrchestrator.debug = true
#*.locationService.debug = true
#*.mecPlatformManager.debug = true
#**.cmdenv-log-level = INFO
#**.log.level =detail 
#**.verbosity = EV  # Uncommented to enable EV logging for all modules
#*.mecOrchestrator.verbosity = EV
#*.mecPlatform.verbosity = EV
#*.ue[*].app[*].verbosity = EV
*.locationService.debug = true  # Keeping debug mode for specific modules if needed

############### Statistics ##################
#output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
#output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
repeat = 10
seed-set = ${repetition}
num-rngs = 3
**.repetitionNumber =  ${repetition}
#**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
#**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
#**.vector-recording = true
**.alert**.vector-recording = true
**.init**.vector-recording = true
**.UL**.vector-recording = true
**.DL**.vector-recording = true
#**.rtVideoStreaming*.vector-recording = true
#**.requestQueue*.vector-recording = true
############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)



#------------------------------------#
# Config MultiMec
#
# General configuration for the for a multicell, multi-MEC system
# In this scenario, the MEC orchestrator instantiates three MEC apps on 
# MEC Host 1 (because it has more CPU resources that MEC host 2. However,
# the MEC apps use the Location Service available on MEC Host 2 only.
#
[Config alertMec]
sim-time-limit=190s
network = simu5g.simulations.NR.mec.alertMultiMec.AlertMultiMec

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 5000m
**.mobility.constraintAreaMaxY = 1500m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=2}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### BS position #################
*.gnb1.mobility.initialX = 500m
*.gnb1.mobility.initialY = 400m
*.gnb2.mobility.initialX = 2500m
*.gnb2.mobility.initialY = 400m
*.gnb3.mobility.initialX = 4500m
*.gnb3.mobility.initialY = 400m

*.mecHost1.mobility.initialX = 500m
*.mecHost2.mobility.initialX = 2500m
*.mecHost3.mobility.initialX = 4500m
############### X2 configuration #################
*.gnb1.numX2Apps = 1 
*.gnb2.numX2Apps = 2   
*.gnb3.numX2Apps = 1                                          # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0" 
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0" 

*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp0" 
*.gnb3.x2App[0].client.connectAddress = "gnb2%x2ppp1" 
############## UE configuration ##################
*.numUe = ${numUEs=100}

# UEs associates to the best BS at the beginning of the simulation
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = true
**.handoverLatency = 5ms
############ UEs position #################
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.initialX = uniform(4700m,4900m)

#*.ue[*].mobility.typename = "VehicleMobility"

#*.ue[0..24].mobility.initialX = uniform(4500m,4700m)

#*.ue[25..49].mobility.initialX = uniform(400m,500m)
# Assigning waypoint files to UE groups

# UEs 0 to 24 follow Lane 1 waypoints
#*.ue[0..24].mobility.waypointFile = "waypoints1.txt"
#*.ue[0..24].mobility.waypointProximity = 1m  # Adjust as needed


# UEs 25 to 49 follow Lane 2 waypoints
#*.ue[25..49].mobility.waypointFile = "waypoints2.txt"
#*.ue[25..49].mobility.waypointProximity = 1m  # Adjust as needed


*.ue[*].mobility.initialY = 1400m
#*.ue[0..24].mobility.initialY = 1400m

#*.ue[25..49].mobility.initialY = 1450m


#*.ue[*].mobility.speed = exponential(30mps)
*.ue[*].mobility.speed = uniform(23mps,36mps)
#*.ue[1].mobility.speed = uniform(20mps,21mps)
#*.ue[0..14].mobility.speed = uniform(23mps,36mps)
#*.ue[15..49].mobility.speed =uniform(15mps,22mps)
#*.ue[*].mobility.speed = 40mps

*.ue[*].mobility.initialMovementHeading = 180deg

############# Client App configuration ################
#------------UEWarningAlertApp---------------
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/SafetyApp.json"

#UE0
*.ue[*].app[1].typename = "UESafetyApp"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].localPort = 4000
*.ue[*].app[1].startTime = 2s																#period to sending messages
*.ue[*].app[1].stopTime = 70s
#*.ue[*].app[1].DataRate = 1						
**.radius = 60


# Set parameters for the 30% group (UEs 0 and 1)
*.ue[0..29].app[1].DataRate = 5

# Set parameters for the 70% group (UEs 2 to 9)
*.ue[30..99].app[1].DataRate = 0.5
##UE1
#*.ue[*].app[0].typename = "DeviceApp"
#*.ue[*].app[0].localPort = 4501
#*.ue[*].app[0].UALCMPAddress = "ualcmp"
#*.ue[*].app[0].UALCMPPort = 1000
#*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/RealTimeVideoStreamingApp.json"

#*.ue[*].app[1].typename = "RTVideoStreamingSender"
#*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
#*.ue[*].app[1].deviceAppPort = 4501
#*.ue[*].app[1].localPort = 4001
#*.ue[*].app[1].startTime = 2s
#*.ue[*].app[1].stopTime = 200s		
#*.ue[*].app[1].sessionDuration = uniform(3s,12s)
#*.ue[*].app[1].periodBetweenSession = uniform(3s,9s)
#*.ue[*].app[1].fileName = "./DataTraces/data_"+string(ancestorIndex(1) +${repetition})+".gdf"

#UE1
#*.ue[*].app[0].typename = "DeviceApp"
#*.ue[*].app[0].localPort = 4500
#*.ue[*].app[0].UALCMPAddress = "ualcmp"
#*.ue[*].app[0].UALCMPPort = 1000
#*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/SafetyApp.json"

#UE0
#*.ue[*].app[1].typename = "UESafetyApp"
#*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
#*.ue[*].app[1].deviceAppPort = 4500
#*.ue[*].app[1].localPort = 4000
#*.ue[*].app[1].startTime = 2s																#period to sending messages
#*.ue[*].app[1].stopTime = 200s
									
#**.radius = 100

#UE1
#*.ue[*].numApps = 2
#*.ue[*].app[0].typename = "DeviceApp"
#*.ue[*].app[0].localPort = 4500
#*.ue[*].app[0].UALCMPAddress = "ualcmp"
#*.ue[*].app[0].UALCMPPort = 1000
#*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"
#
#*.ue[*].app[1].typename = "UEWarningAlertApp"
#*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
#*.ue[*].app[1].deviceAppPort = 4500
#*.ue[*].app[1].localPort = 4000
#*.ue[*].app[1].startTime = 4s								#when sending start warning alert app									#period to sending messages
#*.ue[*].app[1].stopTime = 70s

		
#UE
#*.ue[17].numApps = 2
#*.ue[17].app[0].typename = "DeviceApp"
#*.ue[17].app[0].localPort = 4500
#*.ue[17].app[0].UALCMPAddress = "ualcmp"
#*.ue[17].app[0].UALCMPPort = 1000
#*.ue[17].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"
#
#*.ue[17].app[1].typename = "UEWarningAlertApp"
#*.ue[17].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
#*.ue[17].app[1].deviceAppPort = 4500
#*.ue[17].app[1].localPort = 4000
#*.ue[17].app[1].startTime = 3s								#when sending start warning alert app									#period to sending messages
#*.ue[17].app[1].stopTime = 200s
#					
##UE2
#*.ue[*].numApps = 2
#*.ue[*].app[0].typename = "DeviceApp"
#*.ue[*].app[0].localPort = 4500
#*.ue[*].app[0].UALCMPAddress = "ualcmp"
#*.ue[*].app[0].UALCMPPort = 1000
#*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"
#
#*.ue[*].app[1].typename = "UEWarningAlertApp"
#*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
#*.ue[*].app[1].deviceAppPort = 4500
#*.ue[*].app[1].localPort = 4000
#*.ue[*].app[1].startTime = 2s								#when sending start warning alert app									#period to sending messages
#*.ue[*].app[1].stopTime = 200s
#
#
*.ue[*].app[1].positionX = 2300
#
*.ue[*].app[1].positionY = 1400		

#*.ue[0..24].app[1].positionY = 1400
#*.ue[0..24].app[1].positionX = 2300	
#------------------------------------#


#*.ue[25..49].app[1].positionX = 2600
#*.ue[25..49].app[1].positionY = 1450	

############ MEC Configuration ############
#**.hasRNISupport = true

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

# MEC Hosts
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
*.mecHost1.maxMECApps = 100000				# max ME Apps to instantiate
										#max ME Apps to instantiate
*.mecHost1.maxRam = 640000GB													#max KBytes of Ram Space 
*.mecHost1.maxDisk = 400000TB	
*.mecHost1.maxCpuSpeed = 11559100

*.mecHost2.maxMECApps = 100000											#max ME Apps to instantiate
*.mecHost2.maxRam = 640000GB													#max KBytes of Ram Space 
*.mecHost2.maxDisk = 400000TB	
*.mecHost2.maxCpuSpeed = 11559100

*.mecHost3.maxMECApps = 100000											#max ME Apps to instantiate
*.mecHost3.maxRam = 640000GB													#max KBytes of Ram Space 
*.mecHost3.maxDisk = 400000TB	
*.mecHost3.maxCpuSpeed = 11559100

*.mecHost*.bsList = "gnb1, gnb2, gnb3"

#*.mecHost*.mecPlatform.ServiceRegistry = true
# MEC Services
# MEC host 1 services configurations
*.mecHost1.mecPlatform.numMecServices = 1
*.mecHost1.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure" 
*.mecHost1.mecPlatform.mecService[0].localPort = 10020
*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructure" 
*.mecHost1.mecPlatform.serviceRegistry.localPort = 10021

# MEC host 2 services configurations
*.mecHost2.mecPlatform.numMecServices = 1
*.mecHost2.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost2.mecPlatform.mecService[0].localPort = 10020
*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure" 
*.mecHost2.mecPlatform.serviceRegistry.localPort = 10021

# MEC host 3 services configurations
*.mecHost3.mecPlatform.numMecServices = 1
*.mecHost3.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost3.mecPlatform.mecService[0].localAddress = "mecHost3.virtualisationInfrastructure" 
*.mecHost3.mecPlatform.mecService[0].localPort = 10020
*.mecHost3.mecPlatform.serviceRegistry.localAddress = "mecHost3.virtualisationInfrastructure" 
*.mecHost3.mecPlatform.serviceRegistry.localPort = 10021

# random number generators configuration
*.mecHost1.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost1.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost1.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost1.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost1.mecPlatform.mecService[0].requestServiceTime = 20us
*.mecHost1.mecPlatform.mecService[0].subscriptionServiceTime = 11us

# random number generators configuration
*.mecHost2.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost2.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost2.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].requestServiceTime = 20us
*.mecHost2.mecPlatform.mecService[0].subscriptionServiceTime = 11us

# random number generators configuration
*.mecHost3.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost3.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost3.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost3.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost3.mecPlatform.mecService[0].requestServiceTime = 20us
*.mecHost3.mecPlatform.mecService[0].subscriptionServiceTime = 11us
# MEC Orchestrator configuration
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2, mecHost3"              # MEC hosts associated to the MEC system
*.mecOrchestrator.selectionPolicy = ${mecHostSelectionPolicy = "BestHostBased"}
*.mecOrchestrator.alpha = 0.5
*.mecOrchestrator.betta = 0.5
*.mecOrchestrator.lamda = 1.5

*.mecOrchestrator.mecHostIndex = 2
*.mecOrchestrator.mecApplicationPackageList = "SafetyApp,WarningAlertApp,RealTimeVideoStreamingApp"   # List of MEC app descriptors to be onboarded at 
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator" # the MECPM needs to know the MEC orchestrator
